@prefix mqtt: <https://doernern.github.io/MQTT4SSNOntology/MQTT4SSN#> .
@prefix ex: <http://example.org/individuals#> .
@prefix owl: <http://www.w3.org/2002/07/owl#> .
@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .
@prefix xml: <http://www.w3.org/XML/1998/namespace> .
@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .
@prefix foaf: <http://xmlns.com/foaf/0.1/> .
@prefix bibo: <http://purl.org/ontology/bibo/> .
@prefix dct: <http://purl.org/dc/terms/> .
@prefix sosa: <http://www.w3.org/ns/sosa/> .
@prefix ssn: <http://www.w3.org/ns/ssn/> .
@prefix qudt: <http://qudt.org/schema/qudt/> .
@prefix unit: <http://qudt.org/vocab/unit/> .
@prefix time: <http://www.w3.org/2006/time#>.
@prefix qk: <http://qudt.org/vocab/quantitykind/> .
@prefix mqv: <https://www.w3.org/2019/wot/mqtt#> .

@base <https://doernern.github.io/MQTT4SSNOntology/MQTT4SSN#> .

<https://doernern.github.io/MQTT4SSNOntology/MQTT4SSN> rdf:type owl:Ontology ;
                                                    owl:imports <http://www.w3.org/ns/ssn/> ,
                                                        <http://www.w3.org/ns/sosa/> ,
                                                        <http://qudt.org/schema/qudt/> ,
                                                        <https://www.w3.org/2019/wot/mqtt> ,
                                                        rdf:Ontology ;
	                                                dct:bibliographicCitation "Niklas Doerner, Maria Maleshkova (2025): MQTT4SSN Ontology. https://doi.org/10.5281/zenodo.16704302" ; 
                                                    dct:created "2025-08-11"^^xsd:date ;
                                                    dct:creator 
                                                        [   rdf:type foaf:Person ;
                                                            foaf:name "Niklas Doerner" ;
                                                            foaf:mbox <mailto:doernern@hsu-hh.de> ;
                                                            foaf:homepage <https://orcid.org/0009-0004-0088-8633>
                                                        ] ,
                                                        [   rdf:type foaf:Person ;
                                                            foaf:name "Maria Maleshkova" ;
                                                            foaf:mbox <mailto:maleshkm@hsu-hh.de> ;
                                                            foaf:homepage <https://orcid.org/0000-0003-3458-4748>
                                                        ] ;
                                                    dct:license <https://creativecommons.org/licenses/by-nc-sa/4.0/> ;
                                                    dct:title "MQTT4SSN Ontology" ;
                                                    bibo:doi "10.5281/zenodo.16704302" ;
	                                                rdfs:comment "The MQTT4SSN Ontology provides rdf:type semantic model for representing the MQTT transport protocol, containing the transmitted data. It extends the W3C SSN/SOSA ontology with the MQTT transport protocol component."@en ;
                                                	foaf:fundedBy ex:DTEC .

ex:DTEC rdf:type foaf:Organization ;
    rdfs:label "Digitalization and Technology Research Center of the Bundeswehr" ;
    foaf:homepage <https://dtecbw.de/home> ;
    rdfs:comment "This research as part of the project EKI is funded by dtec.bw – Digitalization and Technology Research Center of the Bundeswehr which we gratefully acknowledge. dtec.bw is funded by the European Union – NextGenerationEU." .

#############################
# MQTT4SSN Ontology #
#############################

###########
# Classes #
###########

# Network

mqtt:NetworkConnection rdf:type owl:Class ;
    owl:equivalentClass mqv:NetworkConnection ;
    rdfs:label "MQTT Network Connection"@en ;
    rdfs:comment "A transport-layer connection between an MQTT Client and an MQTT Broker (optionally secured with TLS)."@en .

mqtt:NetworkParticipant rdf:type owl:Class ;
    rdfs:label "MQTT Network Participant"@en ;
    rdfs:comment "An entity participating in an MQTT network, such as an MQTT Client or an MQTT Broker."@en .

mqtt:Broker rdf:type owl:Class ;
    owl:equivalentClass mqv:Server ;
    rdfs:subClassOf mqtt:NetworkParticipant ;
    rdfs:label "MQTT Broker"@en ;
    rdfs:comment "An MQTT Broker that accepts client connections, manages subscriptions, and forwards published messages."@en .

mqtt:Client rdf:type owl:Class ;
    rdfs:subClassOf mqtt:NetworkParticipant ;
    owl:equivalentClass mqv:Client ;
    rdfs:label "MQTT Client"@en ;
    rdfs:comment "An MQTT Client that connects to an MQTT Broker and publishes or subscribes to MQTT Topics; may host SOSA systems."@en .

# Topic

mqtt:Topic rdf:type owl:Class ;
    owl:equivalentClass mqv:TopicName ;
    rdfs:label "MQTT Topic"@en ;
    rdfs:comment "A hierarchical MQTT Topic to which MQTT Clients publish and/or subscribe."@en .

mqtt:TopicFilter rdf:type owl:Class ;
    owl:equivalentClass mqv:TopicFilter ;
    rdfs:label "MQTT Topic Filter"@en ;
    rdfs:comment "A filter expression (e.g., with wildcards) used in SUBSCRIBE/UNSUBSCRIBE to match MQTT Topics."@en .

mqtt:TopicSubject rdf:type owl:Class ;
    rdfs:label "MQTT Topic Subject"@en ;
    rdfs:comment "A conceptual subject carried on an MQTT Topic, e.g., an Observation, Actuation, Property, or Feature of Interest."@en .

sosa:Property rdfs:subClassOf mqtt:TopicSubject .
sosa:FeatureOfInterest rdfs:subClassOf mqtt:TopicSubject .
sosa:Actuation rdfs:subClassOf mqtt:TopicSubject .
sosa:ActuationCollection rdfs:subClassOf mqtt:TopicSubject .
sosa:Observation rdfs:subClassOf mqtt:TopicSubject .
sosa:ObservationCollection rdfs:subClassOf mqtt:TopicSubject .

# Control Packet

mqtt:ControlPacket rdf:type owl:Class ;
    owl:equivalentClass mqv:ControlPacket ;
    rdfs:label "MQTT Control Packet"@en ;
    rdfs:comment "An MQTT Control Packet such as PUBLISH, SUBSCRIBE, or UNSUBSCRIBE."@en .

mqtt:PublishPacket rdf:type owl:Class ;
    owl:equivalentClass mqv:PUBLISH ;
    rdfs:subClassOf mqtt:ControlPacket ;
    rdfs:label "MQTT PUBLISH Packet"@en ;
    rdfs:comment "An MQTT Control Packet used by an MQTT Client to publish an application message to an MQTT Topic."@en .

mqtt:SubscribePacket rdf:type owl:Class ;
    owl:equivalentClass mqv:SUBSCRIBE ;
    rdfs:subClassOf mqtt:ControlPacket ;
    rdfs:label "MQTT SUBSCRIBE Packet"@en ;
    rdfs:comment "An MQTT Control Packet used by an MQTT Client to subscribe to one or more MQTT Topic Filters."@en .

mqtt:UnsubscribePacket rdf:type owl:Class ;
    owl:equivalentClass mqv:UNSUBSCRIBE ;
    rdfs:subClassOf mqtt:ControlPacket ;
    rdfs:label "MQTT UNSUBSCRIBE Packet"@en ;
    rdfs:comment "An MQTT Control Packet used by an MQTT Client to remove one or more subscriptions."@en .

# Header & Payload

mqtt:FixedHeader rdf:type owl:Class ;
    rdfs:label "MQTT Fixed Header"@en ;
    rdfs:comment "The header present in all MQTT Control Packets, containing the packet type and flags."@en .

mqtt:PublishFixedHeader rdf:type owl:Class ;
    rdfs:subClassOf mqtt:FixedHeader ;
    rdfs:label "MQTT PUBLISH Fixed Header"@en ;
    rdfs:comment "The Fixed Header used in PUBLISH packets."@en .

mqtt:SubscribeFixedHeader rdf:type owl:Class ;
    rdfs:subClassOf mqtt:FixedHeader ;
    rdfs:label "MQTT SUBSCRIBE Fixed Header"@en ;
    rdfs:comment "The Fixed Header used in SUBSCRIBE packets."@en .

mqtt:UnsubscribeFixedHeader rdf:type owl:Class ;
    rdfs:subClassOf mqtt:FixedHeader ;
    rdfs:label "MQTT UNSUBSCRIBE Fixed Header"@en ;
    rdfs:comment "The Fixed Header used in UNSUBSCRIBE packets."@en .

mqtt:VariableHeader rdf:type owl:Class ;
    rdfs:label "MQTT Variable Header"@en ;
    rdfs:comment "The optional header carrying packet-specific metadata (e.g., packet identifier, MQTT Topic name)."@en .

mqtt:PublishVariableHeader rdf:type owl:Class ;
    rdfs:subClassOf mqtt:VariableHeader ;
    rdfs:label "MQTT PUBLISH Variable Header"@en ;
    rdfs:comment "The Variable Header of a PUBLISH packet; includes the MQTT Topic and optionally a packet identifier."@en .

mqtt:SubscribeVariableHeader rdf:type owl:Class ;
    rdfs:subClassOf mqtt:VariableHeader ;
    rdfs:label "MQTT SUBSCRIBE Variable Header"@en ;
    rdfs:comment "The Variable Header of a SUBSCRIBE packet; typically includes the packet identifier."@en .

mqtt:UnsubscribeVariableHeader rdf:type owl:Class ;
    rdfs:subClassOf mqtt:VariableHeader ;
    rdfs:label "MQTT UNSUBSCRIBE Variable Header"@en ;
    rdfs:comment "The Variable Header of an UNSUBSCRIBE packet; typically includes the packet identifier."@en .

mqtt:Payload rdf:type owl:Class ;
    rdfs:label "MQTT Payload"@en ;
    rdfs:comment "The application data carried by an MQTT Control Packet."@en .

mqtt:PublishPayload rdf:type owl:Class ;
    rdfs:subClassOf mqtt:Payload ;
    rdfs:label "MQTT PUBLISH Payload"@en ;
    rdfs:comment "The payload of a PUBLISH packet (application message body)."@en .

mqtt:SubscriptionPayload rdf:type owl:Class ;
    rdfs:subClassOf mqtt:Payload ;
    rdfs:label "MQTT SUBSCRIBE Payload"@en ;
    rdfs:comment "The payload of a SUBSCRIBE packet, listing MQTT Subscription Entries."@en .

mqtt:SubscriptionEntry rdf:type owl:Class ;
    rdfs:label "MQTT Subscription Entry"@en ;
    rdfs:comment "A single requested subscription consisting of an MQTT Topic Filter and an associated QoS level."@en .

mqtt:UnsubscriptionPayload rdf:type owl:Class ;
    rdfs:subClassOf mqtt:Payload ;
    rdfs:label "MQTT UNSUBSCRIBE Payload"@en ;
    rdfs:comment "The payload of an UNSUBSCRIBE packet, listing MQTT Topic Filters to be removed."@en .

#####################
# Object Properties #
#####################

# Network Object Properties

mqtt:usesConnection rdf:type owl:ObjectProperty ;
    rdfs:domain mqtt:NetworkParticipant ;
    rdfs:range mqtt:NetworkConnection ;
    owl:inverseOf mqtt:hasParticipant ;
    rdfs:label "uses connection"@en ;
    rdfs:comment "Relates a network participant (MQTT Client or MQTT Broker) to a network connection it uses."@en .

mqtt:hasParticipant rdf:type owl:ObjectProperty ;
    rdfs:domain mqtt:NetworkConnection ;
    rdfs:range mqtt:NetworkParticipant ;
    owl:inverseOf mqtt:usesConnection ;
    rdfs:label "has participant"@en ;
    rdfs:comment "Relates a network connection to its network participant (MQTT Client or MQTT Broker)."@en .

mqtt:isInitiatedBy rdf:type owl:ObjectProperty ;
    rdfs:domain mqtt:NetworkConnection ;
    rdfs:range mqtt:Client ;
    rdfs:label "is initiated by"@en ;
    rdfs:comment "Indicates the MQTT Client that initiated the connection to the MQTT Broker."@en .

mqtt:isAcceptedBy rdf:type owl:ObjectProperty ;
    rdfs:domain mqtt:NetworkConnection ;
    rdfs:range mqtt:Broker ;
    rdfs:label "is accepted by"@en ;
    rdfs:comment "Indicates the MQTT Broker that accepted the client's connection request."@en .

mqtt:isConnectedToBroker rdf:type owl:ObjectProperty ;
    rdfs:domain mqtt:Client ;
    rdfs:range mqtt:Broker ;
    owl:inverseOf mqtt:hasConnectedClient ;
    rdfs:label "is connected to MQTT Broker"@en ;
    rdfs:comment "Links an MQTT Client to the MQTT Broker it is currently connected to."@en .

mqtt:hasConnectedClient rdf:type owl:ObjectProperty ;
    rdfs:domain mqtt:Broker ;
    rdfs:range mqtt:Client ;
    owl:inverseOf mqtt:isConnectedToBroker ;
    rdfs:label "has connected MQTT Client"@en ;
    rdfs:comment "Links an MQTT Broker to an MQTT Client that is connected to it."@en .

mqtt:hosts rdf:type owl:ObjectProperty ;
    rdfs:domain mqtt:Client ;
    rdfs:range sosa:System ;
    rdfs:subPropertyOf sosa:hosts ;
    owl:inverseOf mqtt:isHostedBy ;
    rdfs:label "hosts"@en ;
    rdfs:comment "Links an MQTT Client (as a SOSA platform) to SOSA systems (sensors/actuators) it hosts."@en .

mqtt:isHostedBy rdf:type owl:ObjectProperty ;
    rdfs:domain sosa:System ;
    rdfs:range mqtt:Client ;
    rdfs:subPropertyOf sosa:isHostedBy ;
    owl:inverseOf mqtt:hosts ;
    rdfs:label "is hosted by"@en ;
    rdfs:comment "Links a SOSA system to the hosting MQTT Client."@en .

mqtt:hasClient rdf:type owl:ObjectProperty ;
    rdfs:domain sosa:Platform ;
    rdfs:range mqtt:Client ;
    owl:inverseOf mqtt:runsOnPlatform ;
    rdfs:label "has MQTT Client"@en ;
    rdfs:comment "Relates a SOSA platform to an MQTT Client running on it."@en .

mqtt:runsOnPlatform rdf:type owl:ObjectProperty ;
    rdfs:domain mqtt:Client ;
    rdfs:range sosa:Platform ;
    owl:inverseOf mqtt:hasClient ;
    rdfs:label "runs on platform"@en ;
    rdfs:comment "Links an MQTT Client to the platform on which it operates."@en .

# Topic Object Properties

mqtt:observesTopic rdf:type owl:ObjectProperty ;
    rdfs:domain sosa:Sensor ;
    rdfs:range mqtt:Topic ;
    rdfs:label "observes MQTT Topic"@en ;
    rdfs:comment "Links a sensor to the MQTT Topic to which it publishes observations."@en .

mqtt:listensToTopic rdf:type owl:ObjectProperty ;
    rdfs:domain sosa:Actuator ;
    rdfs:range mqtt:Topic ;
    rdfs:label "listens to MQTT Topic"@en ;
    rdfs:comment "Links an actuator to the MQTT Topic from which it receives actuation commands."@en .

mqtt:hasSubject rdf:type owl:ObjectProperty ;
    rdfs:domain mqtt:Topic ;
    rdfs:range mqtt:TopicSubject ;
    owl:inverseOf mqtt:isSubjectOf ;
    rdfs:label "has topic subject"@en ;
    rdfs:comment "Links an MQTT Topic to the conceptual subject carried on that topic."@en .

mqtt:isSubjectOf rdf:type owl:ObjectProperty ;
    rdfs:domain mqtt:TopicSubject ;
    rdfs:range mqtt:Topic ;
    owl:inverseOf mqtt:hasSubject ;
    rdfs:label "is topic subject of"@en ;
    rdfs:comment "Links a topic subject (e.g., Observation, Actuation) to the MQTT Topic that carries it."@en .

mqtt:isMatchedByFilter rdf:type owl:ObjectProperty ;
    rdfs:domain mqtt:Topic ;
    rdfs:range mqtt:TopicFilter ;
    owl:inverseOf mqtt:matchesTopic ;
    rdfs:label "is matched by MQTT Topic Filter"@en ;
    rdfs:comment "Indicates that an MQTT Topic is matched by a given MQTT Topic Filter."@en .

mqtt:matchesTopic rdf:type owl:ObjectProperty ;
    rdfs:domain mqtt:TopicFilter ;
    rdfs:range mqtt:Topic ;
    owl:inverseOf mqtt:isMatchedByFilter ;
    rdfs:label "matches MQTT Topic"@en ;
    rdfs:comment "Indicates that an MQTT Topic Filter matches a particular MQTT Topic."@en .

mqtt:hasTopicFilter rdf:type owl:ObjectProperty ;
    owl:equivalentProperty mqv:hasTopicFilters ;
    rdfs:domain [ rdf:type owl:Class ; owl:unionOf ( mqtt:SubscriptionEntry mqtt:UnsubscriptionPayload ) ] ;
    rdfs:range mqtt:TopicFilter ;
    owl:inverseOf mqtt:isTopicFilterOf ;
    rdfs:label "has MQTT Topic Filter"@en ;
    rdfs:comment "Relates a Subscription Entry or an UNSUBSCRIBE payload to an MQTT Topic Filter."@en .

mqtt:isTopicFilterOf rdf:type owl:ObjectProperty ;
    rdfs:domain mqtt:TopicFilter ;
    rdfs:range [ rdf:type owl:Class ; owl:unionOf ( mqtt:SubscriptionEntry mqtt:UnsubscriptionPayload ) ] ;
    owl:inverseOf mqtt:hasTopicFilter ;
    rdfs:label "is MQTT Topic Filter of"@en ;
    rdfs:comment "Relates an MQTT Topic Filter to a Subscription Entry or an UNSUBSCRIBE payload."@en .

mqtt:hasTopicName rdf:type owl:ObjectProperty , owl:FunctionalProperty ;
    rdfs:domain mqtt:PublishVariableHeader ;
    rdfs:range mqtt:Topic ;
    owl:inverseOf mqtt:isTopicNameOf ;
    owl:equivalentProperty mqv:hasTopicName ;
    rdfs:label "has MQTT Topic (name)"@en ;
    rdfs:comment "Links a PUBLISH Variable Header to the MQTT Topic to which the message is published."@en .

mqtt:isTopicNameOf rdf:type owl:ObjectProperty ;
    rdfs:domain mqtt:Topic ;
    rdfs:range mqtt:PublishVariableHeader ;
    owl:inverseOf mqtt:hasTopicName ;
    rdfs:label "is MQTT Topic (name) of"@en ;
    rdfs:comment "Links an MQTT Topic to which the message is published to a PUBLISH Variable Header."@en .

# Control Packet Object Properties

mqtt:sendsControlPacket rdf:type owl:ObjectProperty ;
    rdfs:domain mqtt:Client ;
    rdfs:range mqtt:ControlPacket ;
    owl:inverseOf mqtt:isSentBy ;
    owl:equivalentProperty mqv:sendsControlPacket ;
    rdfs:label "sends MQTT Control Packet"@en ;
    rdfs:comment "Relates an MQTT Client to an MQTT Control Packet it sends."@en .

mqtt:isSentBy rdf:type owl:ObjectProperty ;
    rdfs:domain mqtt:ControlPacket ;
    rdfs:range mqtt:Client ;
    owl:inverseOf mqtt:sendsControlPacket ;
    rdfs:label "is sent by MQTT Client"@en ;
    rdfs:comment "Relates an MQTT Control Packet to the MQTT Client that sent it."@en .

mqtt:publishesPacket rdf:type owl:ObjectProperty ;
    rdfs:domain mqtt:Client ;
    rdfs:range mqtt:PublishPacket ;
    rdfs:subPropertyOf mqtt:sendsControlPacket ;
    rdfs:label "publishes PUBLISH Packet"@en ;
    rdfs:comment "Specializes mqtt:sendsControlPacket for PUBLISH packets."@en .

mqtt:subscribesPacket rdf:type owl:ObjectProperty ;
    rdfs:domain mqtt:Client ;
    rdfs:range mqtt:SubscribePacket ;
    rdfs:subPropertyOf mqtt:sendsControlPacket ;
    rdfs:label "sends SUBSCRIBE Packet"@en ;
    rdfs:comment "Specializes mqtt:sendsControlPacket for SUBSCRIBE packets."@en .

mqtt:unsubscribesPacket rdf:type owl:ObjectProperty ;
    rdfs:domain mqtt:Client ;
    rdfs:range mqtt:UnsubscribePacket ;
    rdfs:subPropertyOf mqtt:sendsControlPacket ;
    rdfs:label "sends UNSUBSCRIBE Packet"@en ;
    rdfs:comment "Specializes mqtt:sendsControlPacket for UNSUBSCRIBE packets."@en .

mqtt:forwardsPublishPacket rdf:type owl:ObjectProperty ;
    rdfs:domain mqtt:Broker ;
    rdfs:range mqtt:PublishPacket ;
    rdfs:label "forwards PUBLISH Packet"@en ;
    rdfs:comment "Indicates that an MQTT Broker forwards a PUBLISH packet to subscribers."@en .

mqtt:receivesSubscribePacket rdf:type owl:ObjectProperty ;
    rdfs:domain mqtt:Broker ;
    rdfs:range mqtt:SubscribePacket ;
    rdfs:label "receives SUBSCRIBE Packet"@en ;
    rdfs:comment "Indicates that an MQTT Broker receives a SUBSCRIBE packet from an MQTT Client."@en .

mqtt:receivesUnsubscribePacket rdf:type owl:ObjectProperty ;
    rdfs:domain mqtt:Broker ;
    rdfs:range mqtt:UnsubscribePacket ;
    rdfs:label "receives UNSUBSCRIBE Packet"@en ;
    rdfs:comment "Indicates that an MQTT Broker receives an UNSUBSCRIBE packet from an MQTT Client."@en .

# Header & Payload Object Properties

mqtt:hasFixedHeader rdf:type owl:ObjectProperty , owl:FunctionalProperty ;
    rdfs:domain mqtt:ControlPacket ;
    rdfs:range mqtt:FixedHeader ;
    owl:inverseOf mqtt:isFixedHeaderOf ;
    rdfs:label "has Fixed Header"@en ;
    rdfs:comment "Links an MQTT Control Packet to its Fixed Header."@en .

mqtt:isFixedHeaderOf rdf:type owl:ObjectProperty , owl:FunctionalProperty ;
    rdfs:domain mqtt:FixedHeader ;
    rdfs:range mqtt:ControlPacket ;
    owl:inverseOf mqtt:hasFixedHeader ;
    rdfs:label "is Fixed Header of"@en ;
    rdfs:comment "Links a Fixed Header to the MQTT Control Packet containing it."@en .

mqtt:hasPublishFixedHeader rdf:type owl:ObjectProperty , owl:FunctionalProperty ;
    rdfs:subPropertyOf mqtt:hasFixedHeader ;
    rdfs:domain mqtt:PublishPacket ;
    rdfs:range mqtt:PublishFixedHeader ;
    owl:inverseOf mqtt:isPublishFixedHeaderOf ;
    rdfs:label "has PUBLISH Fixed Header"@en ;
    rdfs:comment "Links a PUBLISH packet to its specific Fixed Header."@en .

mqtt:isPublishFixedHeaderOf rdf:type owl:ObjectProperty , owl:FunctionalProperty ;
    rdfs:subPropertyOf mqtt:isFixedHeaderOf ;
    rdfs:domain mqtt:PublishFixedHeader ;
    rdfs:range mqtt:PublishPacket ;
    owl:inverseOf mqtt:hasPublishFixedHeader ;
    rdfs:label "is PUBLISH Fixed Header of"@en ;
    rdfs:comment "Links a PUBLISH Fixed Header to its MQTT Control Packet."@en .

mqtt:hasSubscriptionFixedHeader rdf:type owl:ObjectProperty , owl:FunctionalProperty ;
    rdfs:subPropertyOf mqtt:hasFixedHeader ;
    rdfs:domain mqtt:SubscribePacket ;
    rdfs:range mqtt:SubscribeFixedHeader ;
    owl:inverseOf mqtt:isSubscriptionFixedHeaderOf ;
    rdfs:label "has SUBSCRIBE Fixed Header"@en ;
    rdfs:comment "Links a SUBSCRIBE packet to its specific Fixed Header."@en .

mqtt:isSubscriptionFixedHeaderOf rdf:type owl:ObjectProperty , owl:FunctionalProperty ;
    rdfs:subPropertyOf mqtt:isFixedHeaderOf ;
    rdfs:domain mqtt:SubscribeFixedHeader ;
    rdfs:range mqtt:SubscribePacket ;
    owl:inverseOf mqtt:hasSubscriptionFixedHeader ;
    rdfs:label "is SUBSCRIBE Fixed Header of"@en ;
    rdfs:comment "Links a SUBSCRIBE Fixed Header to its MQTT Control Packet."@en .

mqtt:hasUnsubscriptionFixedHeader rdf:type owl:ObjectProperty , owl:FunctionalProperty ;
    rdfs:subPropertyOf mqtt:hasFixedHeader ;
    rdfs:domain mqtt:UnsubscribePacket ;
    rdfs:range mqtt:UnsubscribeFixedHeader ;
    owl:inverseOf mqtt:isUnsubscriptionFixedHeaderOf ;
    rdfs:label "has UNSUBSCRIBE Fixed Header"@en ;
    rdfs:comment "Links an UNSUBSCRIBE packet to its specific Fixed Header."@en .

mqtt:isUnsubscriptionFixedHeaderOf rdf:type owl:ObjectProperty , owl:FunctionalProperty ;
    rdfs:subPropertyOf mqtt:isFixedHeaderOf ;
    rdfs:domain mqtt:UnsubscribeFixedHeader ;
    rdfs:range mqtt:UnsubscribePacket ;
    owl:inverseOf mqtt:hasUnsubscriptionFixedHeader ;
    rdfs:label "is UNSUBSCRIBE Fixed Header of"@en ;
    rdfs:comment "Links an UNSUBSCRIBE Fixed Header to its MQTT Control Packet."@en .

mqtt:hasVariableHeader rdf:type owl:ObjectProperty , owl:FunctionalProperty ;
    rdfs:domain mqtt:ControlPacket ;
    rdfs:range mqtt:VariableHeader ;
    owl:inverseOf mqtt:isVariableHeaderOf ;
    rdfs:label "has Variable Header"@en ;
    rdfs:comment "Links an MQTT Control Packet to its Variable Header."@en .

mqtt:isVariableHeaderOf rdf:type owl:ObjectProperty , owl:FunctionalProperty ;
    rdfs:domain mqtt:VariableHeader ;
    rdfs:range mqtt:ControlPacket ;
    owl:inverseOf mqtt:hasVariableHeader ;
    rdfs:label "is Variable Header of"@en ;
    rdfs:comment "Links a Variable Header to the MQTT Control Packet containing it."@en .

mqtt:hasPublishVariableHeader rdf:type owl:ObjectProperty , owl:FunctionalProperty ;
    rdfs:subPropertyOf mqtt:hasVariableHeader ;
    rdfs:domain mqtt:PublishPacket ;
    rdfs:range mqtt:PublishVariableHeader ;
    owl:inverseOf mqtt:isPublishVariableHeaderOf ;
    rdfs:label "has PUBLISH Variable Header"@en ;
    rdfs:comment "Links a PUBLISH packet to its specific Variable Header."@en .

mqtt:isPublishVariableHeaderOf rdf:type owl:ObjectProperty , owl:FunctionalProperty ;
    rdfs:subPropertyOf mqtt:isVariableHeaderOf ;
    rdfs:domain mqtt:PublishVariableHeader ;
    rdfs:range mqtt:PublishPacket ;
    owl:inverseOf mqtt:hasPublishVariableHeader ;
    rdfs:label "is PUBLISH Variable Header of"@en ;
    rdfs:comment "Links a PUBLISH Variable Header to its MQTT Control Packet."@en .

mqtt:hasSubscriptionVariableHeader rdf:type owl:ObjectProperty , owl:FunctionalProperty ;
    rdfs:subPropertyOf mqtt:hasVariableHeader ;
    rdfs:domain mqtt:SubscribePacket ;
    rdfs:range mqtt:SubscribeVariableHeader ;
    owl:inverseOf mqtt:isSubscriptionVariableHeaderOf ;
    rdfs:label "has SUBSCRIBE Variable Header"@en ;
    rdfs:comment "Links a SUBSCRIBE packet to its specific Variable Header."@en .

mqtt:isSubscriptionVariableHeaderOf rdf:type owl:ObjectProperty , owl:FunctionalProperty ;
    rdfs:subPropertyOf mqtt:isVariableHeaderOf ;
    rdfs:domain mqtt:SubscribeVariableHeader ;
    rdfs:range mqtt:SubscribePacket ;
    owl:inverseOf mqtt:hasSubscriptionVariableHeader ;
    rdfs:label "is SUBSCRIBE Variable Header of"@en ;
    rdfs:comment "Links a SUBSCRIBE Variable Header to its MQTT Control Packet."@en .

mqtt:hasUnsubscriptionVariableHeader rdf:type owl:ObjectProperty , owl:FunctionalProperty ;
    rdfs:subPropertyOf mqtt:hasVariableHeader ;
    rdfs:domain mqtt:UnsubscribePacket ;
    rdfs:range mqtt:UnsubscribeVariableHeader ;
    owl:inverseOf mqtt:isUnsubscriptionVariableHeaderOf ;
    rdfs:label "has UNSUBSCRIBE Variable Header"@en ;
    rdfs:comment "Links an UNSUBSCRIBE packet to its specific Variable Header."@en .

mqtt:isUnsubscriptionVariableHeaderOf rdf:type owl:ObjectProperty , owl:FunctionalProperty ;
    rdfs:subPropertyOf mqtt:isVariableHeaderOf ;
    rdfs:domain mqtt:UnsubscribeVariableHeader ;
    rdfs:range mqtt:UnsubscribePacket ;
    owl:inverseOf mqtt:hasUnsubscriptionVariableHeader ;
    rdfs:label "is UNSUBSCRIBE Variable Header of"@en ;
    rdfs:comment "Links an UNSUBSCRIBE Variable Header to its MQTT Control Packet."@en .

mqtt:hasPayload rdf:type owl:ObjectProperty , owl:FunctionalProperty ;
    rdfs:domain mqtt:ControlPacket ;
    rdfs:range mqtt:Payload ;
    owl:inverseOf mqtt:isPayloadOf ;
    rdfs:label "has MQTT Payload"@en ;
    rdfs:comment "Links an MQTT Control Packet to its MQTT Payload."@en ;
    owl:equivalentProperty mqv:hasPayload .

mqtt:isPayloadOf rdf:type owl:ObjectProperty , owl:FunctionalProperty ;
    rdfs:domain mqtt:Payload ;
    rdfs:range mqtt:ControlPacket ;
    owl:inverseOf mqtt:hasPayload ;
    rdfs:label "is MQTT Payload of"@en ;
    rdfs:comment "Links an MQTT Payload to the MQTT Control Packet containing it."@en .

mqtt:hasPublishPayload rdf:type owl:ObjectProperty , owl:FunctionalProperty ;
    rdfs:subPropertyOf mqtt:hasPayload ;
    rdfs:domain mqtt:PublishPacket ;
    rdfs:range mqtt:PublishPayload ;
    owl:inverseOf mqtt:isPublishPayloadOf ;
    rdfs:label "has PUBLISH Payload"@en ;
    rdfs:comment "Links a PUBLISH packet to its MQTT Payload."@en .

mqtt:isPublishPayloadOf rdf:type owl:ObjectProperty , owl:FunctionalProperty ;
    rdfs:subPropertyOf mqtt:isPayloadOf ;
    rdfs:domain mqtt:PublishPayload ;
    rdfs:range mqtt:PublishPacket ;
    owl:inverseOf mqtt:hasPublishPayload ;
    rdfs:label "is PUBLISH Payload of"@en ;
    rdfs:comment "Links a PUBLISH Payload to its MQTT Control Packet."@en .

mqtt:hasSubscriptionPayload rdf:type owl:ObjectProperty , owl:FunctionalProperty ;
    rdfs:subPropertyOf mqtt:hasPayload ;
    rdfs:domain mqtt:SubscribePacket ;
    rdfs:range mqtt:SubscriptionPayload ;
    owl:inverseOf mqtt:isSubscriptionPayloadOf ;
    rdfs:label "has SUBSCRIBE Payload"@en ;
    rdfs:comment "Links a SUBSCRIBE packet to its MQTT Payload."@en .

mqtt:isSubscriptionPayloadOf rdf:type owl:ObjectProperty , owl:FunctionalProperty ;
    rdfs:subPropertyOf mqtt:isPayloadOf ;
    rdfs:domain mqtt:SubscriptionPayload ;
    rdfs:range mqtt:SubscribePacket ;
    owl:inverseOf mqtt:hasSubscriptionPayload ;
    rdfs:label "is SUBSCRIBE Payload of"@en ;
    rdfs:comment "Links a SUBSCRIBE Payload to its MQTT Control Packet."@en .

mqtt:hasUnsubscriptionPayload rdf:type owl:ObjectProperty , owl:FunctionalProperty ;
    rdfs:subPropertyOf mqtt:hasPayload ;
    rdfs:domain mqtt:UnsubscribePacket ;
    rdfs:range mqtt:UnsubscriptionPayload ;
    owl:inverseOf mqtt:isUnsubscriptionPayloadOf ;
    rdfs:label "has UNSUBSCRIBE Payload"@en ;
    rdfs:comment "Links an UNSUBSCRIBE packet to its MQTT Payload."@en .

mqtt:isUnsubscriptionPayloadOf rdf:type owl:ObjectProperty , owl:FunctionalProperty ;
    rdfs:subPropertyOf mqtt:isPayloadOf ;
    rdfs:domain mqtt:UnsubscriptionPayload ;
    rdfs:range mqtt:UnsubscribePacket ;
    owl:inverseOf mqtt:hasUnsubscriptionPayload ;
    rdfs:label "is UNSUBSCRIBE Payload of"@en ;
    rdfs:comment "Links an UNSUBSCRIBE Payload to its MQTT Control Packet."@en .

mqtt:hasSubscriptions rdf:type owl:ObjectProperty ;
    rdfs:domain mqtt:SubscriptionPayload ;
    rdfs:range mqtt:SubscriptionEntry ;
    owl:inverseOf mqtt:isSubscriptionOf ;
    rdfs:label "has MQTT Subscription Entries"@en ;
    rdfs:comment "Links a SUBSCRIBE Payload to one or more MQTT Subscription Entries."@en .

mqtt:isSubscriptionOf rdf:type owl:ObjectProperty ;
    rdfs:domain mqtt:SubscriptionEntry ;
    rdfs:range mqtt:SubscriptionPayload ;
    owl:inverseOf mqtt:hasSubscriptions ;
    rdfs:label "is MQTT Subscription Entry of"@en ;
    rdfs:comment "Links an MQTT Subscription Entry to its SUBSCRIBE Payload."@en .

# Additional Payload Object Properties

mqtt:payloadEncodesObservation rdf:type owl:ObjectProperty ;
    rdfs:domain mqtt:PublishPayload ;
    rdfs:range sosa:Observation ;
    rdfs:label "payload encodes SOSA Observation"@en ;
    rdfs:comment "Indicates that the MQTT Payload encodes a SOSA Observation."@en .

mqtt:payloadEncodesObservationCollection rdf:type owl:ObjectProperty ;
    rdfs:domain mqtt:PublishPayload ;
    rdfs:range sosa:ObservationCollection ;
    rdfs:label "payload encodes SOSA Observation Collection"@en ;
    rdfs:comment "Indicates that the MQTT Payload encodes a collection of SOSA Observations."@en .

mqtt:payloadEncodesActuation rdf:type owl:ObjectProperty ;
    rdfs:domain mqtt:PublishPayload ;
    rdfs:range sosa:Actuation ;
    rdfs:label "payload encodes SOSA Actuation"@en ;
    rdfs:comment "Indicates that the MQTT Payload encodes a single SOSA Actuation command."@en .

mqtt:payloadEncodesActuationCollection rdf:type owl:ObjectProperty ;
    rdfs:domain mqtt:PublishPayload ;
    rdfs:range sosa:ActuationCollection ;
    rdfs:label "payload encodes SOSA Actuation Collection"@en ;
    rdfs:comment "Indicates that the MQTT Payload encodes a collection of actuation commands."@en .

mqtt:hasEncodedFields rdf:type owl:ObjectProperty ;
    rdfs:domain mqtt:PublishPayload ;
    rdfs:range rdf:List ;
    owl:inverseOf mqtt:isEncodedInPayload ;
    rdfs:label "has encoded fields"@en ;
    rdfs:comment "Links an MQTT Payload to an ordered RDF list naming fields encoded within the payload content."@en .

mqtt:isEncodedInPayload rdf:type owl:ObjectProperty ;
    rdfs:domain rdf:List ;
    rdfs:range mqtt:PublishPayload ;
    owl:inverseOf mqtt:hasEncodedFields ;
    rdfs:label "is encoded in MQTT Payload"@en ;
    rdfs:comment "Links an RDF list of field names to the MQTT Payload that contains them."@en .

mqtt:hasPayloadSize rdf:type owl:ObjectProperty , owl:FunctionalProperty ;
    rdfs:domain mqtt:Payload ;
    rdfs:range qudt:QuantityValue ;
    rdfs:label "has payload size"@en ;
    rdfs:comment "Specifies the size of an MQTT Payload as a QUDT quantity value (e.g., unit:Byte)."@en .

#######################
# Datatype Properties #
#######################

# Network Datatype Properties

mqtt:hasHostAddress rdf:type owl:DatatypeProperty , owl:FunctionalProperty ;
    rdfs:domain mqtt:Broker ;
    rdfs:range xsd:string ;
    rdfs:label "MQTT Broker host"@en ;
    rdfs:comment "The hostname or IP address of an MQTT Broker."@en .

mqtt:hasPortNumber rdf:type owl:DatatypeProperty , owl:FunctionalProperty ;
    rdfs:domain mqtt:Broker ;
    rdfs:range xsd:integer ;
    rdfs:label "MQTT Broker port"@en ;
    rdfs:comment "The TCP port on which an MQTT Broker listens."@en .

mqtt:usesTLS rdf:type owl:DatatypeProperty , owl:FunctionalProperty ;
    rdfs:domain mqtt:NetworkConnection ;
    rdfs:range xsd:boolean ;
    rdfs:label "uses TLS"@en ;
    rdfs:comment "True if the Network Connection is protected via TLS, otherwise false."@en .

mqtt:hasClientID rdf:type owl:DatatypeProperty , owl:FunctionalProperty ;
    rdfs:domain mqtt:Client ;
    rdfs:range xsd:string ;
    rdfs:label "MQTT Client identifier"@en ;
    rdfs:comment "The MQTT Client identifier used when connecting to an MQTT Broker."@en .

# Topic Datatype Properties

mqtt:hasFilterPattern rdf:type owl:DatatypeProperty ;
    rdfs:domain mqtt:TopicFilter ;
    rdfs:range xsd:string ;
    rdfs:label "MQTT Topic Filter pattern"@en ;
    rdfs:comment "The MQTT Topic Filter pattern as a string (e.g., 'sensor/+/temp' or 'fabrik/zentrierung/#')."@en .

# Header Datatype Properties

mqtt:hasPacketIdentifier rdf:type owl:DatatypeProperty , owl:FunctionalProperty ;
    rdfs:domain mqtt:VariableHeader ;
    rdfs:range xsd:unsignedShort ;
    rdfs:label "packet identifier"@en ;
    rdfs:comment "A 16-bit identifier used to correlate MQTT messages when QoS > 0."@en .

mqtt:hasQosLevel rdf:type owl:DatatypeProperty , owl:FunctionalProperty ;
    rdfs:domain [ rdf:type owl:Class ; owl:unionOf ( mqtt:PublishFixedHeader mqtt:SubscriptionEntry ) ] ;
    rdfs:range [ rdf:type rdfs:Datatype ; owl:onDatatype xsd:integer ; owl:withRestrictions ( [ xsd:minInclusive "0"^^xsd:integer ] [ xsd:maxInclusive "2"^^xsd:integer ] ) ] ;
    rdfs:label "QoS level"@en ;
    rdfs:comment "The MQTT Quality of Service level (0 = at most once, 1 = at least once, 2 = exactly once)."@en ;
    rdfs:comment "Not mapped to mqv:hasQoSFlag because MQV models QoS as an object property, while mqtt:hasQosLevel is a datatype property."@en .

mqtt:isRetainedFlag rdf:type owl:DatatypeProperty ;
    owl:equivalentProperty mqv:hasRetainFlag ;
    rdfs:domain mqtt:PublishFixedHeader ;
    rdfs:range xsd:boolean ;
    rdfs:label "RETAIN flag"@en ;
    rdfs:comment "True if the message should be retained on the MQTT Broker."@en .

mqtt:isDUPFlag rdf:type owl:DatatypeProperty ;
    owl:equivalentProperty mqv:hasDUPFlag ;
    rdfs:domain mqtt:PublishFixedHeader ;
    rdfs:range xsd:boolean ;
    rdfs:label "DUP flag"@en ;
    rdfs:comment "True if this is a duplicate delivery of an earlier PUBLISH message."@en .

# Payload Datatype Properties

mqtt:hasPayloadContentDelimiter rdf:type owl:DatatypeProperty , owl:FunctionalProperty ;
    rdfs:domain mqtt:PublishPayload ;
    rdfs:range xsd:string ;
    rdfs:label "payload content delimiter"@en ;
    rdfs:comment "The delimiter used to separate fields in the payload content."@en .

mqtt:hasPayloadContentType rdf:type owl:DatatypeProperty , owl:FunctionalProperty ;
    rdfs:domain mqtt:PublishPayload ;
    rdfs:range xsd:string ;
    rdfs:label "payload content type"@en ;
    rdfs:comment "The MIME type of the payload content (e.g., 'application/json')."@en .

mqtt:hasPayloadContent rdf:type owl:DatatypeProperty , owl:FunctionalProperty ;
    rdfs:domain mqtt:PublishPayload ;
    rdfs:range xsd:string ;
    rdfs:label "payload content"@en ;
    rdfs:comment "The application message body as a string (possibly serialized/encoded)."@en .

mqtt:hasPayloadEncoding rdf:type owl:DatatypeProperty , owl:FunctionalProperty ;
    rdfs:domain mqtt:PublishPayload ;
    rdfs:range xsd:string ;
    rdfs:label "payload encoding"@en ;
    rdfs:comment "The character encoding or serialization used for the payload (e.g., 'UTF-8', 'Base64')."@en .

##################
# General Axioms #
##################

# MQTT superclasses are mutually disjoint
# NetworkParticipant Broker and Client are not disjoint
[ rdf:type owl:AllDisjointClasses ;
  owl:members (
    mqtt:NetworkParticipant
    mqtt:NetworkConnection
    mqtt:ControlPacket
    mqtt:FixedHeader
    mqtt:VariableHeader
    mqtt:Payload
    mqtt:SubscriptionEntry
    mqtt:Topic
    mqtt:TopicSubject
    mqtt:TopicFilter
  )
] .

# Payload subclasses are mutually disjoint
[ rdf:type owl:AllDisjointClasses ;
  owl:members (
    mqtt:PublishPayload
    mqtt:SubscriptionPayload
    mqtt:UnsubscriptionPayload
  )
] .

# ControlPacket subclasses are mutually disjoint
[ rdf:type owl:AllDisjointClasses ;
  owl:members (
    mqtt:PublishPacket
    mqtt:SubscribePacket
    mqtt:UnsubscribePacket
  )
] .

# Fixed header subclasses are mutually disjoint
[ rdf:type owl:AllDisjointClasses ;
  owl:members (
    mqtt:PublishFixedHeader
    mqtt:SubscribeFixedHeader
    mqtt:UnsubscribeFixedHeader
  )
] .

# Variable header subclasses are mutually disjoint
[ rdf:type owl:AllDisjointClasses ;
  owl:members (
    mqtt:PublishVariableHeader
    mqtt:SubscribeVariableHeader
    mqtt:UnsubscribeVariableHeader
  )
] .

###############
# Individuals #
###############